services:
  postgres:
    image: postgres:13
    restart: always
    networks:
      - microservice
    ports:
      - "2345:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
  
  eureka:
    build: 
      context: ./Eureka
    restart: always
    ports:
      - "${EUREKA_PORT}:${EUREKA_PORT}"
    networks:
      - microservice
    volumes:
      - ./src:/eureka/src
      - ./build:/eureka/build      
    environment:
     CONFIG_URI: ${CONFIG_URI}


  gateway:
    build:
      context: ./Gateway
    restart: always
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    networks:
      - microservice
    volumes:
      - ./src:/gateway/src
      - ./build:/gateway/build
    environment:
      EUREKA_SERVER: ${EUREKA_SERVER}  
      CONFIG_URI: ${CONFIG_URI}
    depends_on:
      - eureka   
      - config

  config:
    build:
      context: ./Config
    restart: always
    ports:
      - "${CONFIG_PORT}:${CONFIG_PORT}"     
    networks:
      - microservice
    volumes:
      - ./src:/config/src
      - ./build:/config/build
    environment:
      EUREKA_SERVER: ${EUREKA_SERVER}
      GITHUB_PASS: ${GITHUB_PASS}
      GITHUB_CONFIG_URI: ${GITHUB_CONFIG_URI}  

  microservice:
    build:
      context: ./Microservice
    restart: always
    ports:
      - "${MICROSERVICE_PORT}:${MICROSERVICE_PORT}"
    networks:
      - microservice
    volumes:
      - ./src:/microservice/src
      - ./build:/microservice/build
    environment:
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      EUREKA_SERVER: ${EUREKA_SERVER}
      CONFIG_URI: ${CONFIG_URI}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - postgres
      - eureka
      - config


networks:
  microservice:
    driver: bridge

volumes:
  postgres_data:
